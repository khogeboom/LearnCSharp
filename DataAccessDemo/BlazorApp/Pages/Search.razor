@page "/search"
@inject IPersonDataService personData

<h3>Search Page</h3>

<EditForm Model="@search" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label>Search</label>
        <InputText @bind-Value="search.SearchTerm"></InputText>
    </div>
    <button class="btn btn-outline-primary" type="submit">Go</button>
</EditForm>

@if (people == null)
{
    <h4>Loading...</h4>
}
else
{
    <div class="row">
        <div class="col-md-8">
            <table class="table table-striped">
                <thead class="table-dark">
                    <tr>
                        <th>Id</th>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Date of Birth</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var p in people)
                    {
                        <tr>
                            <td>@p.Id</td>
                            <td>@p.FirstName</td>
                            <td>@p.LastName</td>
                            <td>@p.DateOfBirth</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@code {
    private SearchModel search = new SearchModel();
    private List<IPersonModel> people;

    private async Task HandleValidSubmit()
    {
        people = await personData.SearchPeople(search.SearchTerm);
    }
}
