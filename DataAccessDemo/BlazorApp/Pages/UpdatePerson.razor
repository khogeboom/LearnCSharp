@inject IPersonDataService personData

<EditForm Model="@person" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form=group">
        <label>Id</label>
        <span>@person.Id</span>
    </div>

    <div class="form-group">
        <label>First Name</label>
        <InputText @bind-Value="person.FirstName" class="form-control"></InputText>
    </div>

    <div class="form-group">
        <label>Last Name</label>
        <InputText @bind-Value="person.LastName" class="form-control"></InputText>
    </div>

    <div class="form-group">
        <label>Date of Birth</label>
        <InputDate @bind-Value="person.DateOfBirth" class="form-control"></InputDate>
    </div>

    <button class="btn btn-primary" type="submit">Update Person</button>
</EditForm>


@code {
    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public EventCallback<IPersonModel> OnUpdate { get; set; }

    private IPersonModel person = new DisplayPersonModel();

    private async Task HandleValidSubmit()
    {
        await personData.UpdatePerson(person);
        await OnUpdate.InvokeAsync(person);
    }

    protected override async Task OnParametersSetAsync()
    {
        var p = await personData.ReadPeople(Id);

        person.Id = p.Id;
        person.FirstName = p.FirstName;
        person.LastName = p.LastName;
        person.DateOfBirth = p.DateOfBirth;
    }
}
